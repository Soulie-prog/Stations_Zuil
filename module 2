import csv
import psycopg2
import uuid
from datetime import datetime
import os  # Import the os module for file operations

connection_string = "dbname='Stationsbase' user='postgres' password='Soulaim@n25' host='localhost' port='5432'"

try:
    conn = psycopg2.connect(connection_string)
    cursor = conn.cursor()
except Exception as e:
    print(f"Database connection error: {e}")
    exit(1)

Naam_Moderator = input("Vul hier uw Moderator Naam: ")
Email_Moderator = input("Vul hier uw Moderator Email: ")
Datum_tijd = datetime.now()

with open('Check_Bericht.csv') as csvfile:
    bestand = csv.reader(csvfile)
    eerste_regel = next(bestand)
    Bericht = None
    filtered_content = [] 

    for regel in bestand:
        if len(regel) == 4:
            Datum, Station, Naam, Bericht = regel

            check_bericht = input(f"Dit is het bericht: {Bericht}\nWordt dit bericht goedgekeurd? (ja/nee) ").lower()

            if check_bericht == 'ja':
                Goedkeurings_vraag = True
                keuring = 'Goedgekeurd'
                print("Bericht is goedgekeurd.")
                break

            elif check_bericht == 'nee':
                Goedkeurings_vraag = False
                keuring = 'Afgekeurd'
                print("Bericht is afgekeurd.")
                break
            else:
                filtered_content.append(regel)  

    if Bericht is not None:
        # Generate unique identifiers
        unieke_id_0 = str(uuid.uuid4())
        unieke_id_1 = str(uuid.uuid4())

        # Insert records into the tables
        cursor.execute(
            "INSERT INTO Goedkeuring_Check (nummer, bericht_check, keuring, tijd) VALUES (%s, %s, %s, %s)",
            (unieke_id_0, Bericht, keuring, Datum_tijd))
        cursor.execute(
            "INSERT INTO Moderator (nummer, Moderator_naam, Moderator_Email) VALUES (%s, %s, %s)",
            (unieke_id_1, Naam_Moderator, Email_Moderator))
        conn.commit()
    else:
        print("Geen geldige berichten gevonden in het CSV-bestand.")

# Rewrite the filtered content back to the CSV file
with open('Check_Bericht.csv', 'w', newline='') as csvfile:
    writer = csv.writer(csvfile)
    writer.writerow(eerste_regel) 
    writer.writerows(filtered_content)  

cursor.close()
conn.close()

