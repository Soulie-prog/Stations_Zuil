from tkinter import *
import json
import requests
import random
import psycopg2
from datetime import datetime

def scherm():
    scherm = Tk()
    scherm.title("Stationzuil")
    scherm.geometry("800x500")
    NS_Logo = PhotoImage(file='station.png')
    NS_Logo_2 = PhotoImage(file='station.png')
    scherm.iconphoto(True, NS_Logo)
    scherm.config(background='#FFC917')
    label = Label(scherm,
                  text='Welkom Bij het StationZuil van NS',
                  font=('NS Sans', 40, 'bold'),
                  fg='#003082',
                  bg='#FFC917',
                  image=NS_Logo,
                  compound='left')
    label.place(x=200, y=20)

    # Create a label to display the weather information
    weather_label = Label(scherm, text='', font=('NS Sans', 20, 'bold'), bg='#FFC917')
    weather_label.place(x=60, y=500)  # Adjust the position as needed

    date_time_label = Label(scherm, text='', font=('NS Sans', 20, 'bold'), fg='#003082', bg='#FFC917', anchor='e')
    date_time_label.place(x=1200, y=200)  # Adjust the position as needed

    messages_text = Text(scherm, width=40, height=10,background='#FFC917')
    messages_text.place(x=1100, y=450)  # Adjust the position as needed

    # Function to update the date and time label
    def update_date_time():
        current_date_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        date_time_label.config(text=current_date_time)
        scherm.after(1000, update_date_time)  # Update every 1000ms (1 second)

    update_date_time()

    def Weerbericht():
        with open('data.txt', 'r') as file:
            lijst = file.readlines()

        global Station  # Access the global Station variable
        Station = random.choice(lijst).strip()
        weather = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={Station},nl&lang=nl&APPID=f662d7e76c05f726fed0413d66484c84')
        return json.loads(weather.content)

    def update_weather():
        global Station  # Access the global Station variable
        weather_data = Weerbericht()
        if 'weather' in weather_data:
            description = weather_data['weather'][0]['description']
            temperature_kelvin = weather_data['main']['temp']
            temperature_celsius = temperature_kelvin - 273.15
            weather_info = f'Op station {Station}:\n Weer: {description.capitalize()}\nTemperatuur: {temperature_celsius.__round__()}Â°C'
            weather_label.config(text=weather_info)
        else:
            weather_label.config(text='Weerbericht niet beschikbaar')

    update_weather_button = Button(scherm, text='Update Weerbericht', command=update_weather)
    update_weather_button.place(x=60, y=600)

    # Function to update the last 5 messages
    def update_messages():
        # Connect to the database (you need to modify the connection string)
        connection_string = "dbname='StationBasis' user='postgres' password='Soulaim@n25' host='localhost' port='5432'"

        conn = psycopg2.connect(connection_string)
        cursor = conn.cursor()

        # Fetch the last 5 messages from the database
        cursor.execute(
            "SELECT bericht FROM Info_Bericht ORDER BY tijd DESC LIMIT 5"
        )
        messages = cursor.fetchall()

        # Display the messages in the text widget
        messages_text.delete(1.0, END)  # Clear the text widget
        for message in messages:
            messages_text.insert(END, message[0] + "\n")  # Append each message

        conn.close()

    update_messages_button = Button(scherm, text='Update Messages', command=update_messages)
    update_messages_button.place(x=1200, y=600)

    scherm.mainloop()

scherm()

